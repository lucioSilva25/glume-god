{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\n\nimport Home from \"../Screens/Home\";\nimport DetailsScreen from \"../Screens/DetailsScreen\";\nimport SettingsScreen from \"../Screens/SettingsScreen\";\nimport Graph from \"../Screens/Graph\";\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"Graph\";\nvar detailsName = \"Details\";\nvar settingsName = \"Settings\";\nvar Tab = createBottomTabNavigator();\nfunction MainContainer() {\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: homeName,\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          var rn = route.name;\n          if (rn === homeName) {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (rn === detailsName) {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (rn === settingsName) {\n            iconName = focused ? 'settings' : 'settings-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'grey',\n      labelStyle: {\n        paddingBottom: 10,\n        fontSize: 10\n      },\n      style: {\n        padding: 10,\n        height: 70\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: homeName,\n      component: Graph,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: detailsName,\n      component: DetailsScreen\n    }), _jsx(Tab.Screen, {\n      name: settingsName,\n      component: SettingsScreen\n    })]\n  });\n}\nexport default MainContainer;","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","Home","DetailsScreen","SettingsScreen","Graph","homeName","detailsName","settingsName","Tab","MainContainer","route","tabBarIcon","focused","color","size","iconName","rn","name","activeTintColor","inactiveTintColor","labelStyle","paddingBottom","fontSize","style","padding","height","headerShown"],"sources":["C:/Users/devandroid/Downloads/glume-god/navigation/MainContainer.js"],"sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\n// Screens\r\nimport Home from '../Screens/Home';\r\nimport DetailsScreen from '../Screens/DetailsScreen';\r\nimport SettingsScreen from '../Screens/SettingsScreen';\r\nimport Graph from '../Screens/Graph';\r\n\r\n//Screen names\r\nconst homeName = \"Graph\";\r\nconst detailsName = \"Details\";\r\nconst settingsName = \"Settings\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MainContainer() {\r\n  return (\r\n      <Tab.Navigator\r\n        initialRouteName={homeName}\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            let rn = route.name;\r\n\r\n            if (rn === homeName) {\r\n              iconName = focused ? 'home' : 'home-outline';\r\n\r\n            } else if (rn === detailsName) {\r\n              iconName = focused ? 'list' : 'list-outline';\r\n\r\n            } else if (rn === settingsName) {\r\n              iconName = focused ? 'settings' : 'settings-outline';\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: 'tomato',\r\n          inactiveTintColor: 'grey',\r\n          labelStyle: { paddingBottom: 10, fontSize: 10 },\r\n          style: { padding: 10, height: 70}\r\n        }}>\r\n\r\n        <Tab.Screen name={homeName} component={Graph} options={\r\n        {\r\n            headerShown: false\r\n        }}/>\r\n        <Tab.Screen name={detailsName} component={DetailsScreen} />\r\n        <Tab.Screen name={settingsName} component={SettingsScreen} />\r\n\r\n      </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default MainContainer;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,QAAQ;;AAGf,OAAOC,IAAI;AACX,OAAOC,aAAa;AACpB,OAAOC,cAAc;AACrB,OAAOC,KAAK;;AAAyB;AAAA;AAGrC,IAAMC,QAAQ,GAAG,OAAO;AACxB,IAAMC,WAAW,GAAG,SAAS;AAC7B,IAAMC,YAAY,GAAG,UAAU;AAE/B,IAAMC,GAAG,GAAGT,wBAAwB,EAAE;AAEtC,SAASU,aAAa,GAAG;EACvB,OACI,MAAC,GAAG,CAAC,SAAS;IACZ,gBAAgB,EAAEJ,QAAS;IAC3B,aAAa,EAAE;MAAA,IAAGK,KAAK,QAALA,KAAK;MAAA,OAAQ;QAC7BC,UAAU,EAAE,2BAA8B;UAAA,IAA3BC,OAAO,SAAPA,OAAO;YAAEC,KAAK,SAALA,KAAK;YAAEC,IAAI,SAAJA,IAAI;UACjC,IAAIC,QAAQ;UACZ,IAAIC,EAAE,GAAGN,KAAK,CAACO,IAAI;UAEnB,IAAID,EAAE,KAAKX,QAAQ,EAAE;YACnBU,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;UAE9C,CAAC,MAAM,IAAII,EAAE,KAAKV,WAAW,EAAE;YAC7BS,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;UAE9C,CAAC,MAAM,IAAII,EAAE,KAAKT,YAAY,EAAE;YAC9BQ,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;UACtD;;UAGA,OAAO,KAAC,QAAQ;YAAC,IAAI,EAAEG,QAAS;YAAC,IAAI,EAAED,IAAK;YAAC,KAAK,EAAED;UAAM,EAAG;QAC/D;MACF,CAAC;IAAA,CAAE;IACH,aAAa,EAAE;MACbK,eAAe,EAAE,QAAQ;MACzBC,iBAAiB,EAAE,MAAM;MACzBC,UAAU,EAAE;QAAEC,aAAa,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC;MAC/CC,KAAK,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE;IAClC,CAAE;IAAA,WAEF,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAEpB,QAAS;MAAC,SAAS,EAAED,KAAM;MAAC,OAAO,EACrD;QACIsB,WAAW,EAAE;MACjB;IAAE,EAAE,EACJ,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAEpB,WAAY;MAAC,SAAS,EAAEJ;IAAc,EAAG,EAC3D,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAEK,YAAa;MAAC,SAAS,EAAEJ;IAAe,EAAG;EAAA,EAE/C;AAEtB;AAEA,eAAeM,aAAa"},"metadata":{},"sourceType":"module"}