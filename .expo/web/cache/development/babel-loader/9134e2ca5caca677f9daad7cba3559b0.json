{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Home from \"../Screens/Home\";\nimport DetailsScreen from \"../Screens/DetailsScreen\";\nimport SettingsScreen from \"../Screens/SettingsScreen\";\nimport Graph from \"../Screens/Graph\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"Graph\";\nvar detailsName = \"Details\";\nvar settingsName = \"Settings\";\nvar Tab = createBottomTabNavigator();\n\nfunction MainContainer() {\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: homeName,\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n          var rn = route.name;\n\n          if (rn === homeName) {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (rn === detailsName) {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (rn === settingsName) {\n            iconName = focused ? 'settings' : 'settings-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'grey',\n      labelStyle: {\n        paddingBottom: 10,\n        fontSize: 10\n      },\n      style: {\n        padding: 10,\n        height: 70\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: homeName,\n      component: Graph,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: detailsName,\n      component: DetailsScreen\n    }), _jsx(Tab.Screen, {\n      name: settingsName,\n      component: SettingsScreen\n    })]\n  });\n}\n\nexport default MainContainer;","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","Home","DetailsScreen","SettingsScreen","Graph","homeName","detailsName","settingsName","Tab","MainContainer","route","tabBarIcon","focused","color","size","iconName","rn","name","activeTintColor","inactiveTintColor","labelStyle","paddingBottom","fontSize","style","padding","height","headerShown"],"sources":["C:/Users/devandroid/Desktop/glume-god/navigation/MainContainer.js"],"sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\n// Screens\r\nimport Home from '../Screens/Home';\r\nimport DetailsScreen from '../Screens/DetailsScreen';\r\nimport SettingsScreen from '../Screens/SettingsScreen';\r\nimport Graph from '../Screens/Graph';\r\n\r\n//Screen names\r\nconst homeName = \"Graph\";\r\nconst detailsName = \"Details\";\r\nconst settingsName = \"Settings\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction MainContainer() {\r\n  return (\r\n      <Tab.Navigator\r\n        initialRouteName={homeName}\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            let rn = route.name;\r\n\r\n            if (rn === homeName) {\r\n              iconName = focused ? 'home' : 'home-outline';\r\n\r\n            } else if (rn === detailsName) {\r\n              iconName = focused ? 'list' : 'list-outline';\r\n\r\n            } else if (rn === settingsName) {\r\n              iconName = focused ? 'settings' : 'settings-outline';\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: 'tomato',\r\n          inactiveTintColor: 'grey',\r\n          labelStyle: { paddingBottom: 10, fontSize: 10 },\r\n          style: { padding: 10, height: 70}\r\n        }}>\r\n\r\n        <Tab.Screen name={homeName} component={Graph} options={\r\n        {\r\n            headerShown: false\r\n        }}/>\r\n        <Tab.Screen name={detailsName} component={DetailsScreen} />\r\n        <Tab.Screen name={settingsName} component={SettingsScreen} />\r\n\r\n      </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default MainContainer;"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AAGA,OAAOC,IAAP;AACA,OAAOC,aAAP;AACA,OAAOC,cAAP;AACA,OAAOC,KAAP;;;AAGA,IAAMC,QAAQ,GAAG,OAAjB;AACA,IAAMC,WAAW,GAAG,SAApB;AACA,IAAMC,YAAY,GAAG,UAArB;AAEA,IAAMC,GAAG,GAAGT,wBAAwB,EAApC;;AAEA,SAASU,aAAT,GAAyB;EACvB,OACI,MAAC,GAAD,CAAK,SAAL;IACE,gBAAgB,EAAEJ,QADpB;IAEE,aAAa,EAAE;MAAA,IAAGK,KAAH,QAAGA,KAAH;MAAA,OAAgB;QAC7BC,UAAU,EAAE,2BAA8B;UAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;UAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;UAAA,IAAXC,IAAW,SAAXA,IAAW;UACxC,IAAIC,QAAJ;UACA,IAAIC,EAAE,GAAGN,KAAK,CAACO,IAAf;;UAEA,IAAID,EAAE,KAAKX,QAAX,EAAqB;YACnBU,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;UAED,CAHD,MAGO,IAAII,EAAE,KAAKV,WAAX,EAAwB;YAC7BS,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;UAED,CAHM,MAGA,IAAII,EAAE,KAAKT,YAAX,EAAyB;YAC9BQ,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,kBAAlC;UACD;;UAGD,OAAO,KAAC,QAAD;YAAU,IAAI,EAAEG,QAAhB;YAA0B,IAAI,EAAED,IAAhC;YAAsC,KAAK,EAAED;UAA7C,EAAP;QACD;MAjB4B,CAAhB;IAAA,CAFjB;IAqBE,aAAa,EAAE;MACbK,eAAe,EAAE,QADJ;MAEbC,iBAAiB,EAAE,MAFN;MAGbC,UAAU,EAAE;QAAEC,aAAa,EAAE,EAAjB;QAAqBC,QAAQ,EAAE;MAA/B,CAHC;MAIbC,KAAK,EAAE;QAAEC,OAAO,EAAE,EAAX;QAAeC,MAAM,EAAE;MAAvB;IAJM,CArBjB;IAAA,WA4BE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAEpB,QAAlB;MAA4B,SAAS,EAAED,KAAvC;MAA8C,OAAO,EACrD;QACIsB,WAAW,EAAE;MADjB;IADA,EA5BF,EAgCE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAEpB,WAAlB;MAA+B,SAAS,EAAEJ;IAA1C,EAhCF,EAiCE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAEK,YAAlB;MAAgC,SAAS,EAAEJ;IAA3C,EAjCF;EAAA,EADJ;AAsCD;;AAED,eAAeM,aAAf"},"metadata":{},"sourceType":"module"}