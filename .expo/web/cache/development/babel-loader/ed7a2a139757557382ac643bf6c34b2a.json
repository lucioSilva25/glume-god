{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"icon\", \"renderInPortal\", \"placement\", \"placementProps\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { Button } from \"../../primitives/Button\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { OverlayContainer } from '@react-native-aria/overlays';\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar Fab = function Fab(props, ref) {\n  var themeProps = usePropsResolution('FAB', props);\n\n  var label = themeProps.label,\n      icon = themeProps.icon,\n      renderInPortal = themeProps.renderInPortal,\n      placement = themeProps.placement,\n      placementProps = themeProps.placementProps,\n      newProps = _objectWithoutProperties(themeProps, _excluded);\n\n  var fabComponent = React.createElement(Button, _extends({}, placementProps[placement], {\n    ref: ref,\n    startIcon: icon\n  }, newProps), label);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return renderInPortal ? React.createElement(OverlayContainer, null, fabComponent) : fabComponent;\n};\n\nexport default memo(forwardRef(Fab));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,MAAT;AAEA,SAASC,kBAAT;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,qBAAT;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAmBC,GAAnB,EAAgC;EAC1C,IAAMC,UAAU,GAAGN,kBAAkB,CAAC,KAAD,EAAQI,KAAR,CAArC;;EACA,IACEG,KADF,GAOID,UAPJ,CACEC,KADF;EAAA,IAEEC,IAFF,GAOIF,UAPJ,CAEEE,IAFF;EAAA,IAGEC,cAHF,GAOIH,UAPJ,CAGEG,cAHF;EAAA,IAIEC,SAJF,GAOIJ,UAPJ,CAIEI,SAJF;EAAA,IAKEC,cALF,GAOIL,UAPJ,CAKEK,cALF;EAAA,IAMKC,QANL,4BAOIN,UAPJ;;EASA,IAAMO,YAAY,GAChBjB,oBAACG,MAAD,eACMY,cAAc,CAACD,SAAD,CADpB;IAEEL,GAAG,EAAEA,GAFP;IAGES,SAAS,EAAEN;EAHb,GAIMI,QAJN,GAMGL,KANH,CADF;;EAWA,IAAIL,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EAED,OAAOK,cAAc,GACnBb,oBAACK,gBAAD,QAAmBY,YAAnB,CADmB,GAGnBA,YAHF;AA1BF;;AAiCA,eAAehB,IAAI,CAACC,UAAU,CAACK,GAAD,CAAX,CAAnB","names":["React","memo","forwardRef","Button","usePropsResolution","OverlayContainer","useHasResponsiveProps","Fab","props","ref","themeProps","label","icon","renderInPortal","placement","placementProps","newProps","fabComponent","startIcon"],"sources":["Fab.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Button } from '../../primitives/Button';\nimport type { IFabProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { OverlayContainer } from '@react-native-aria/overlays';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Fab = (props: IFabProps, ref: any) => {\n  const themeProps = usePropsResolution('FAB', props);\n  const {\n    label,\n    icon,\n    renderInPortal,\n    placement,\n    placementProps,\n    ...newProps\n  } = themeProps;\n\n  const fabComponent = (\n    <Button\n      {...placementProps[placement]}\n      ref={ref}\n      startIcon={icon}\n      {...newProps}\n    >\n      {label}\n    </Button>\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return renderInPortal ? (\n    <OverlayContainer>{fabComponent}</OverlayContainer>\n  ) : (\n    fabComponent\n  );\n};\n\nexport default memo(forwardRef(Fab));\n"]},"metadata":{},"sourceType":"module"}